{"version":3,"file":"static/js/9831.cd733607.chunk.js","mappings":"oOAMO,MAQMA,EAA4DA,EAAGC,YAAW,EAAOC,eAErFC,EAAAA,EAAAA,GAACC,EAAAA,GAAyB,CAACC,YAAY,EAAMH,SAAEA,IAe7BI,OAAOC,WAAW,gC,4CCpB7C,MAAMC,EAAyBC,EAAAA,MAAW,IACxC,iGAAsDC,MAAMC,IAAM,CAChEC,QAASD,EAAOE,4CAIdC,EAAsBA,IAAM,gCAE5BC,EAA2BN,EAAAA,MAAW,IAC1CK,IAAsBJ,MAAMC,IAAM,CAAQC,QAASD,EAAOK,2BAGtDC,EAAwBR,EAAAA,MAAW,IACvCK,IAAsBJ,MAAMC,IAAM,CAAQC,QAASD,EAAOO,wBAGtDC,EAA0BV,EAAAA,MAAW,IACzCK,IAAsBJ,MAAMC,IAAM,CAAQC,QAASD,EAAOS,gCAGtDC,EAAkCA,EAAGnB,eAEvCC,EAAAA,EAAAA,GAACH,EAAoB,CAAAE,UACnBC,EAAAA,EAAAA,GAACgB,EAAuB,CAACG,SAAUA,OAASpB,UAC1CqB,EAAAA,EAAAA,IAACR,EAAwB,CAAAb,SAAA,EACvBC,EAAAA,EAAAA,GAACc,EAAqB,IACrBf,SAOLsB,EAA0C,CAE9C,8CAA8C,EAC9C,iDAAiD,GAGtCC,EAAeA,KAC1B,MAAMC,GAAcC,EAAAA,EAAAA,UAAQ,IAAM,IAAIC,EAAAA,GAAe,IAuBrD,OApBMtB,OAAeuB,sBACnBC,OAAOC,eAAezB,OAAQ,uBAAwB,CACpD0B,cAAc,EACdC,UAAU,EACVC,MAAO,CAELC,SAAUA,CAACC,EAAYC,KACb,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMC,YAAYd,EACbA,EAAmB,OAAJa,QAAI,IAAJA,OAAI,EAAJA,EAAMC,UAGnB,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAME,aAEfC,cAAeA,KAAM,EACrBC,gBAAiBA,OACjBC,kBAAmBA,WAMvBvC,EAAAA,EAAAA,GAACM,EAAAA,SAAc,CAACkC,SAAU,KAAKzC,UAC7BC,EAAAA,EAAAA,GAACkB,EAAqB,CAAAnB,UACpBC,EAAAA,EAAAA,GAACyC,EAAAA,EAAY,CAACC,OAAO,KAAI3C,UACvBC,EAAAA,EAAAA,GAAC2C,EAAAA,GAAmB,CAACC,OAAQrB,EAAYxB,UACvCC,EAAAA,EAAAA,GAACK,EAAsB,WAId,EAKrBwC,EAAAA,QAAgB7C,EAAAA,EAAAA,GAACsB,EAAY,IAAKwB,SAASC,eAAe,Q","sources":["shared/web-shared/design-system/index.tsx","shared/web-shared/model-trace-explorer/oss-notebook-renderer/bootstrap.tsx"],"sourcesContent":["import React from 'react';\n\nimport { DesignSystemThemeProvider } from '@databricks/design-system';\n\nexport type DarkModePref = 'system' | 'dark' | 'light';\n\nexport const DARK_MODE_PREF_DEFAULT = 'system';\n\nexport const LOCAL_STORAGE_DARK_MODE_PREF_KEY: any = 'dark-mode-pref';\n\nexport interface SupportsDuBoisThemesProps {\n  disabled?: boolean;\n}\n\nexport const SupportsDuBoisThemes: React.FC<SupportsDuBoisThemesProps> = ({ disabled = false, children }) => {\n  // eslint-disable-next-line react/forbid-elements\n  return <DesignSystemThemeProvider isDarkMode={false}>{children}</DesignSystemThemeProvider>;\n};\n\nexport const getIsDarkMode = (prefersDarkMode: DarkModePref): boolean => {\n  return prefersDarkMode === 'dark';\n};\n\nexport function getUserDarkModePref(): DarkModePref {\n  return 'system';\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function setUserDarkModePref(value: DarkModePref) {}\n\n// For system-level dark mode preference\nconst darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\nexport function systemPrefersDark(): boolean {\n  return darkModeMediaQuery.matches;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function setDarkModeSupported(value: boolean) {}\n\nexport function WorkspaceImg(props: React.ImgHTMLAttributes<HTMLImageElement> & { src?: string; alt?: string }) {\n  return <img alt=\"altt\" {...props} />;\n}\n","import React, { useMemo } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from '@databricks/i18n';\nimport { SupportsDuBoisThemes } from '@databricks/web-shared/design-system';\nimport { QueryClient, QueryClientProvider } from '@databricks/web-shared/query-client';\nimport '@databricks/design-system/dist/index.css';\nimport '@databricks/design-system/dist/index-dark.css';\n\nimport './index.css';\n\nconst LazyModelTraceExplorer = React.lazy(() =>\n  import('@databricks/web-shared/model-trace-explorer').then((module) => ({\n    default: module.ModelTraceExplorerOSSNotebookRenderer,\n  })),\n);\n\nconst getLazyDesignSystem = () => import('@databricks/design-system');\n\nconst LazyDesignSystemProvider = React.lazy(() =>\n  getLazyDesignSystem().then((module) => ({ default: module.DesignSystemProvider })),\n);\n\nconst LazyApplyGlobalStyles = React.lazy(() =>\n  getLazyDesignSystem().then((module) => ({ default: module.ApplyGlobalStyles })),\n);\n\nconst LazyDesignSystemContext = React.lazy(() =>\n  getLazyDesignSystem().then((module) => ({ default: module.DesignSystemEventProvider })),\n);\n\nconst DesignSystemProviders: React.FC = ({ children }) => {\n  return (\n    <SupportsDuBoisThemes>\n      <LazyDesignSystemContext callback={() => {}}>\n        <LazyDesignSystemProvider>\n          <LazyApplyGlobalStyles />\n          {children}\n        </LazyDesignSystemProvider>\n      </LazyDesignSystemContext>\n    </SupportsDuBoisThemes>\n  );\n};\n\nconst FLAG_OVERRIDES: Record<string, boolean> = {\n  // without this, the tags look really ugly in OSS\n  'databricks.fe.designsystem.useNewTagColors': true,\n  'databricks.fe.traceExplorer.enableSummaryView': true,\n};\n\nexport const AppComponent = () => {\n  const queryClient = useMemo(() => new QueryClient(), []);\n\n  // hack to silence console warnings in OSS\n  if (!(window as any).__databricks_mfe_rpc) {\n    Object.defineProperty(window, '__databricks_mfe_rpc', {\n      configurable: false,\n      writable: false,\n      value: {\n        // mock all safex calls to return their default value\n        makeCall: (id: string, args: any) => {\n          if (args?.flagName in FLAG_OVERRIDES) {\n            return FLAG_OVERRIDES[args?.flagName];\n          }\n\n          return args?.defaultValue;\n        },\n        hasHandlerFor: () => true,\n        registerHandler: () => {},\n        unregisterHandler: () => {},\n      },\n    });\n  }\n\n  return (\n    <React.Suspense fallback={null}>\n      <DesignSystemProviders>\n        <IntlProvider locale=\"en\">\n          <QueryClientProvider client={queryClient}>\n            <LazyModelTraceExplorer />\n          </QueryClientProvider>\n        </IntlProvider>\n      </DesignSystemProviders>\n    </React.Suspense>\n  );\n};\n\n// eslint-disable-next-line no-restricted-syntax\nReactDOM.render(<AppComponent />, document.getElementById('root'));\n"],"names":["SupportsDuBoisThemes","disabled","children","_jsx","DesignSystemThemeProvider","isDarkMode","window","matchMedia","LazyModelTraceExplorer","React","then","module","default","ModelTraceExplorerOSSNotebookRenderer","getLazyDesignSystem","LazyDesignSystemProvider","DesignSystemProvider","LazyApplyGlobalStyles","ApplyGlobalStyles","LazyDesignSystemContext","DesignSystemEventProvider","DesignSystemProviders","callback","_jsxs","FLAG_OVERRIDES","AppComponent","queryClient","useMemo","QueryClient","__databricks_mfe_rpc","Object","defineProperty","configurable","writable","value","makeCall","id","args","flagName","defaultValue","hasHandlerFor","registerHandler","unregisterHandler","fallback","IntlProvider","locale","QueryClientProvider","client","ReactDOM","document","getElementById"],"sourceRoot":""}