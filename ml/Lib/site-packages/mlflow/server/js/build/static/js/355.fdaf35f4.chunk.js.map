{"version":3,"file":"static/js/355.fdaf35f4.chunk.js","mappings":"sNAuBA,UAhB6BA,KAC3B,MAAM,aAAEC,IAAiBC,EAAAA,EAAAA,KACzBC,IAAUF,EAAc,iCAExB,MAAMG,GAAgBC,EAAAA,EAAAA,UAAQ,IAAM,CAACJ,IAAe,CAACA,IAE/CK,GAAWC,EAAAA,EAAAA,MAOjB,OANAC,EAAAA,EAAAA,YAAU,KACJP,KAAiBQ,EAAAA,EAAAA,OACnBH,EAASI,EAAAA,GAAOC,uBAAuBV,GACzC,GACC,CAACA,EAAcK,KAEXM,EAAAA,EAAAA,GAACC,EAAAA,EAAoB,CAACT,cAAeA,GAAiB,C","sources":["experiment-tracking/pages/experiment-traces/ExperimentTracesPage.tsx"],"sourcesContent":["import { useEffect, useMemo } from 'react';\nimport invariant from 'invariant';\nimport { useNavigate, useParams } from '../../../common/utils/RoutingUtils';\nimport { ExperimentViewTraces } from '../../components/experiment-page/components/ExperimentViewTraces';\nimport { shouldEnableExperimentPageHeaderV2 } from '../../../common/utils/FeatureUtils';\nimport Routes from '../../routes';\n\nconst ExperimentTracesPage = () => {\n  const { experimentId } = useParams();\n  invariant(experimentId, 'Experiment ID must be defined');\n\n  const experimentIds = useMemo(() => [experimentId], [experimentId]);\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (experimentId && !shouldEnableExperimentPageHeaderV2()) {\n      navigate(Routes.getExperimentPageRoute(experimentId));\n    }\n  }, [experimentId, navigate]);\n\n  return <ExperimentViewTraces experimentIds={experimentIds} />;\n};\n\nexport default ExperimentTracesPage;\n"],"names":["ExperimentTracesPage","experimentId","useParams","invariant","experimentIds","useMemo","navigate","useNavigate","useEffect","shouldEnableExperimentPageHeaderV2","Routes","getExperimentPageRoute","_jsx","ExperimentViewTraces"],"sourceRoot":""}