{"version":3,"file":"static/js/486.588cb8c6.chunk.js","mappings":"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","sources":["common/components/error-boundaries/SectionErrorBoundary.tsx","common/components/RequestStateWrapper.tsx","model-registry/components/CompareModelVersionsView.tsx","model-registry/components/CompareModelVersionsPage.tsx","shared/building_blocks/PageHeader.tsx","common/components/Spinner.tsx"],"sourcesContent":["/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport Utils from '../../utils/Utils';\n\ntype Props = {\n  showServerError?: boolean;\n};\n\ntype State = any;\n\nexport class SectionErrorBoundary extends React.Component<Props, State> {\n  state = { error: null };\n\n  componentDidCatch(error: any, errorInfo: any) {\n    this.setState({ error });\n    // eslint-disable-next-line no-console -- TODO(FEINF-3587)\n    console.error(error, errorInfo);\n  }\n\n  renderErrorMessage(error: any) {\n    return this.props.showServerError ? <div>Error message: {error.message}</div> : '';\n  }\n\n  render() {\n    const { children } = this.props;\n    const { error } = this.state;\n    if (error) {\n      return (\n        <div>\n          <p>\n            <i\n              data-testid=\"icon-fail\"\n              className=\"fa fa-exclamation-triangle mlflow-icon-fail\"\n              css={classNames.wrapper}\n            />\n            <span> Something went wrong with this section. </span>\n            <span>If this error persists, please report an issue </span>\n            {/* Reported during ESLint upgrade */}\n            {/* eslint-disable-next-line react/jsx-no-target-blank */}\n            <a href={Utils.getSupportPageUrl()} target=\"_blank\">\n              here\n            </a>\n            .{this.renderErrorMessage(error)}\n          </p>\n        </div>\n      );\n    }\n\n    return children;\n  }\n}\n\nconst classNames = {\n  wrapper: {\n    marginLeft: -2, // to align the failure icon with the collapsable section caret toggle\n  },\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getApis } from '../../experiment-tracking/reducers/Reducers';\nimport { Spinner } from './Spinner';\nimport { ErrorCodes } from '../constants';\nimport { ErrorWrapper } from '../utils/ErrorWrapper';\nimport { ReduxState } from '../../redux-types';\n\nexport const DEFAULT_ERROR_MESSAGE = 'A request error occurred.';\n\ntype RequestStateWrapperProps = {\n  children?: React.ReactNode;\n  customSpinner?: React.ReactNode;\n  shouldOptimisticallyRender?: boolean;\n  requests: any[];\n  requestIds?: string[];\n  requestIdsWith404sToIgnore?: string[];\n  description?: any; // TODO: PropTypes.oneOf(Object.values(LoadingDescription))\n  permissionDeniedView?: React.ReactNode;\n  suppressErrorThrow?: boolean;\n  customRequestErrorHandlerFn?: (\n    failedRequests: {\n      id: string;\n      active?: boolean;\n      error: Error | ErrorWrapper;\n    }[],\n  ) => void;\n};\n\ntype RequestStateWrapperState = any;\n\nexport class RequestStateWrapper extends Component<RequestStateWrapperProps, RequestStateWrapperState> {\n  static defaultProps = {\n    requests: [],\n    requestIdsWith404sToIgnore: [],\n    shouldOptimisticallyRender: false,\n  };\n\n  state = {\n    shouldRender: false,\n    shouldRenderError: false,\n  };\n\n  static getErrorRequests(requests: any, requestIdsWith404sToIgnore: any) {\n    return requests.filter((r: any) => {\n      if (r.error !== undefined) {\n        return !(\n          requestIdsWith404sToIgnore &&\n          requestIdsWith404sToIgnore.includes(r.id) &&\n          r.error.getErrorCode() === ErrorCodes.RESOURCE_DOES_NOT_EXIST\n        );\n      }\n      return false;\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps: any) {\n    const shouldRender = nextProps.requests.length\n      ? nextProps.requests.every((r: any) => r && r.active === false)\n      : false;\n\n    const requestErrors = RequestStateWrapper.getErrorRequests(\n      nextProps.requests,\n      nextProps.requestIdsWith404sToIgnore,\n    );\n\n    return {\n      shouldRender,\n      shouldRenderError: requestErrors.length > 0,\n      requestErrors,\n    };\n  }\n\n  getRenderedContent() {\n    const { children, requests, customSpinner, permissionDeniedView, suppressErrorThrow, customRequestErrorHandlerFn } =\n      this.props;\n    // @ts-expect-error TS(2339): Property 'requestErrors' does not exist on type '{... Remove this comment to see the full error message\n    const { shouldRender, shouldRenderError, requestErrors } = this.state;\n    const permissionDeniedErrors = requestErrors.filter((failedRequest: any) => {\n      return failedRequest.error.getErrorCode() === ErrorCodes.PERMISSION_DENIED;\n    });\n\n    if (typeof children === 'function') {\n      return children(!shouldRender, shouldRenderError, requests, requestErrors);\n    } else if (shouldRender || shouldRenderError || this.props.shouldOptimisticallyRender) {\n      if (permissionDeniedErrors.length > 0 && permissionDeniedView) {\n        return permissionDeniedView;\n      }\n      if (shouldRenderError && !suppressErrorThrow) {\n        customRequestErrorHandlerFn ? customRequestErrorHandlerFn(requestErrors) : triggerError(requestErrors);\n      }\n\n      return children;\n    }\n\n    return customSpinner || <Spinner />;\n  }\n\n  render() {\n    return this.getRenderedContent();\n  }\n}\n\nexport const triggerError = (requests: any) => {\n  // This triggers the OOPS error boundary.\n  // eslint-disable-next-line no-console -- TODO(FEINF-3587)\n  console.error('ERROR', requests);\n  throw Error(`${DEFAULT_ERROR_MESSAGE}: ${requests.error}`);\n};\n\nconst mapStateToProps = (state: ReduxState, ownProps: Omit<RequestStateWrapperProps, 'requests'>) => ({\n  requests: getApis(ownProps.requestIds, state),\n});\n\nexport default connect(mapStateToProps)(RequestStateWrapper);\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from '../../common/utils/RoutingUtils';\nimport _ from 'lodash';\nimport { FormattedMessage, injectIntl, IntlShape } from 'react-intl';\nimport { Switch, LegacyTabs, useDesignSystemTheme } from '@databricks/design-system';\n\nimport { getParams, getRunInfo } from '../../experiment-tracking/reducers/Reducers';\nimport '../../experiment-tracking/components/CompareRunView.css';\nimport { CompareRunScatter } from '../../experiment-tracking/components/CompareRunScatter';\nimport { CompareRunBox } from '../../experiment-tracking/components/CompareRunBox';\nimport CompareRunContour from '../../experiment-tracking/components/CompareRunContour';\nimport Routes from '../../experiment-tracking/routes';\nimport { getLatestMetrics } from '../../experiment-tracking/reducers/MetricReducer';\nimport CompareRunUtil from '../../experiment-tracking/components/CompareRunUtil';\nimport Utils from '../../common/utils/Utils';\nimport ParallelCoordinatesPlotPanel from '../../experiment-tracking/components/ParallelCoordinatesPlotPanel';\nimport { ModelRegistryRoutes } from '../routes';\nimport { getModelVersionSchemas } from '../reducers';\nimport { PageHeader } from '../../shared/building_blocks/PageHeader';\nimport type { RunInfoEntity } from '../../experiment-tracking/types';\n\nconst { TabPane } = LegacyTabs;\n\nfunction CenteredText(props: any) {\n  const { theme } = useDesignSystemTheme();\n  return (\n    <div\n      css={{\n        textAlign: 'center',\n        color: theme.colors.textSecondary,\n      }}\n      {...props}\n    />\n  );\n}\n\nfunction CompareTable(props: any) {\n  const { theme } = useDesignSystemTheme();\n  return (\n    <table\n      className=\"mlflow-compare-table table\"\n      css={{\n        'th.main-table-header': {\n          backgroundColor: theme.colors.white,\n          padding: 0,\n        },\n        'td.highlight-data': {\n          backgroundColor: theme.colors.backgroundValidationWarning,\n        },\n      }}\n      {...props}\n    />\n  );\n}\n\nfunction CollapseButton(props: any) {\n  const { theme } = useDesignSystemTheme();\n  return (\n    <button\n      css={{\n        textAlign: 'left',\n        display: 'flex',\n        alignItems: 'center',\n        border: 'none',\n        backgroundColor: theme.colors.white,\n        paddingLeft: 0,\n        cursor: 'pointer',\n      }}\n      {...props}\n    />\n  );\n}\n\ntype CompareModelVersionsViewImplProps = {\n  runInfos: RunInfoEntity[];\n  runInfosValid: boolean[];\n  runUuids: string[];\n  metricLists: any[][];\n  paramLists: any[][];\n  runNames: string[];\n  runDisplayNames: string[];\n  modelName: string;\n  versionsToRuns: any;\n  // @ts-expect-error TS(2314): Generic type 'Array<T>' requires 1 type argument(s... Remove this comment to see the full error message\n  inputsListByName: Array[];\n  // @ts-expect-error TS(2314): Generic type 'Array<T>' requires 1 type argument(s... Remove this comment to see the full error message\n  inputsListByIndex: Array[];\n  // @ts-expect-error TS(2314): Generic type 'Array<T>' requires 1 type argument(s... Remove this comment to see the full error message\n  outputsListByName: Array[];\n  // @ts-expect-error TS(2314): Generic type 'Array<T>' requires 1 type argument(s... Remove this comment to see the full error message\n  outputsListByIndex: Array[];\n  intl: IntlShape;\n};\n\ntype CompareModelVersionsViewImplState = any;\n\nexport class CompareModelVersionsViewImpl extends Component<\n  CompareModelVersionsViewImplProps,\n  CompareModelVersionsViewImplState\n> {\n  state = {\n    inputActive: true,\n    outputActive: true,\n    paramsToggle: true,\n    paramsActive: true,\n    schemaToggle: true,\n    compareByColumnNameToggle: false,\n    schemaActive: true,\n    metricToggle: true,\n    metricActive: true,\n  };\n\n  icons = {\n    plusIcon: <i className=\"fa fa-plus-square-o\" />,\n    minusIcon: <i className=\"fa fa-minus-square-o\" />,\n    downIcon: <i className=\"fa fa-caret-down\" />,\n    rightIcon: <i className=\"fa fa-caret-right\" />,\n    chartIcon: <i className=\"fa fa-line-chart padding-left-text\" />,\n  };\n\n  onToggleClick = (active: any) => {\n    this.setState((state: any) => ({\n      [active]: !state[active],\n    }));\n  };\n\n  render() {\n    const {\n      inputsListByIndex,\n      inputsListByName,\n      modelName,\n      outputsListByIndex,\n      outputsListByName,\n      runInfos,\n      runUuids,\n      runDisplayNames,\n      paramLists,\n      metricLists,\n    } = this.props;\n    const title = (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numVersions} Versions\"\n        description=\"Text for main title for the model comparison page\"\n        values={{ numVersions: this.props.runInfos.length }}\n      />\n    );\n    const breadcrumbs = [\n      <Link to={ModelRegistryRoutes.modelListPageRoute}>\n        <FormattedMessage\n          defaultMessage=\"Registered Models\"\n          description=\"Text for registered model link in the title for model comparison page\"\n        />\n      </Link>,\n      <Link to={ModelRegistryRoutes.getModelPageRoute(modelName)}>{modelName}</Link>,\n    ];\n\n    return (\n      <div\n        className=\"CompareModelVersionsView\"\n        // @ts-expect-error TS(2322): Type '{ '.mlflow-compare-table': { minWidth: number; }; '... Remove this comment to see the full error message\n        css={{\n          ...styles.compareModelVersionsView,\n          ...styles.wrapper(runInfos.length),\n        }}\n      >\n        <PageHeader title={title} breadcrumbs={breadcrumbs} />\n        <div className=\"mlflow-responsive-table-container\">\n          <CompareTable>\n            {this.renderTableHeader()}\n            {this.renderModelVersionInfo()}\n            {this.renderSectionHeader(\n              'paramsActive',\n              'paramsToggle',\n              <FormattedMessage\n                defaultMessage=\"Parameters\"\n                description=\"Table title text for parameters table in the model comparison page\"\n              />,\n            )}\n            {this.renderParams()}\n            {this.renderSectionHeader(\n              'schemaActive',\n              'schemaToggle',\n              <FormattedMessage\n                defaultMessage=\"Schema\"\n                description=\"Table title text for schema table in the model comparison page\"\n              />,\n              false,\n              // @ts-expect-error TS(2345): Argument of type 'Element' is not assignable to pa... Remove this comment to see the full error message\n              <Switch\n                className=\"toggle-switch\"\n                // @ts-expect-error TS(2322): Type '{ className: string; style: { marginLeft: st... Remove this comment to see the full error message\n                style={{ marginLeft: 'auto' }}\n                onChange={() => this.onToggleClick('compareByColumnNameToggle')}\n              />,\n              <div className=\"padding-left-text padding-right-text\">\n                <span>\n                  <FormattedMessage\n                    defaultMessage=\"Ignore column ordering\"\n                    description=\"Toggle text that determines whether to ignore column order in the\n                      model comparison page\"\n                  />\n                </span>\n              </div>,\n            )}\n            {this.renderSchemaSectionHeader(\n              'inputActive',\n              <FormattedMessage\n                defaultMessage=\"Inputs\"\n                description=\"Table subtitle for schema inputs in the model comparison page\"\n              />,\n            )}\n            {this.renderSchema(\n              'inputActive',\n              <FormattedMessage\n                defaultMessage=\"Inputs\"\n                description=\"Table section name for schema inputs in the model comparison page\"\n              />,\n              inputsListByIndex,\n              inputsListByName,\n            )}\n            {this.renderSchemaSectionHeader(\n              'outputActive',\n              <FormattedMessage\n                defaultMessage=\"Outputs\"\n                description=\"Table subtitle for schema outputs in the model comparison page\"\n              />,\n            )}\n            {this.renderSchema(\n              'outputActive',\n              <FormattedMessage\n                defaultMessage=\"Outputs\"\n                description=\"Table section name for schema outputs in the model comparison page\"\n              />,\n              outputsListByIndex,\n              outputsListByName,\n            )}\n            {this.renderSectionHeader(\n              'metricActive',\n              'metricToggle',\n              <FormattedMessage\n                defaultMessage=\"Metrics\"\n                description=\"Table title text for metrics table in the model comparison page\"\n              />,\n            )}\n            {this.renderMetrics()}\n          </CompareTable>\n        </div>\n        <LegacyTabs>\n          <TabPane\n            tab={\n              <FormattedMessage\n                defaultMessage=\"Parallel Coordinates Plot\"\n                description=\"Tab text for parallel coordinates plot on the model comparison page\"\n              />\n            }\n            key=\"parallel-coordinates-plot\"\n          >\n            <ParallelCoordinatesPlotPanel runUuids={runUuids} />\n          </TabPane>\n          <TabPane\n            tab={\n              <FormattedMessage\n                defaultMessage=\"Scatter Plot\"\n                description=\"Tab text for scatter plot on the model comparison page\"\n              />\n            }\n            key=\"scatter-plot\"\n          >\n            <CompareRunScatter runUuids={runUuids} runDisplayNames={runDisplayNames} />\n          </TabPane>\n          <TabPane\n            tab={\n              <FormattedMessage\n                defaultMessage=\"Box Plot\"\n                description=\"Tab pane title for box plot on the compare runs page\"\n              />\n            }\n            key=\"box-plot\"\n          >\n            <CompareRunBox runUuids={runUuids} runInfos={runInfos} paramLists={paramLists} metricLists={metricLists} />\n          </TabPane>\n          <TabPane\n            tab={\n              <FormattedMessage\n                defaultMessage=\"Contour Plot\"\n                description=\"Tab text for contour plot on the model comparison page\"\n              />\n            }\n            key=\"contour-plot\"\n          >\n            <CompareRunContour runUuids={runUuids} runDisplayNames={runDisplayNames} />\n          </TabPane>\n        </LegacyTabs>\n      </div>\n    );\n  }\n\n  renderTableHeader() {\n    const { runInfos, runInfosValid } = this.props;\n    return (\n      <thead>\n        <tr className=\"table-row\">\n          <th scope=\"row\" className=\"row-header block-content\">\n            <FormattedMessage\n              defaultMessage=\"Run ID:\"\n              description=\"Text for run ID header in the main table in the model comparison page\"\n            />\n          </th>\n          {runInfos.map((r, idx) => (\n            <th scope=\"column\" className=\"data-value block-content\" key={r.runUuid}>\n              {/* Do not show links for invalid run IDs */}\n              {runInfosValid[idx] ? (\n                <Link to={Routes.getRunPageRoute(r.experimentId ?? '0', r.runUuid ?? '')}>{r.runUuid}</Link>\n              ) : (\n                r.runUuid\n              )}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n\n  renderModelVersionInfo() {\n    const { runInfos, runInfosValid, versionsToRuns, runNames, modelName } = this.props;\n    return (\n      <tbody className=\"scrollable-table\">\n        <tr className=\"table-row\">\n          <th scope=\"row\" className=\"data-value block-content\">\n            <FormattedMessage\n              defaultMessage=\"Model Version:\"\n              description=\"Text for model version row header in the main table in the model\n                comparison page\"\n            />\n          </th>\n          {Object.keys(versionsToRuns).map((modelVersion) => {\n            const run = versionsToRuns[modelVersion];\n            return (\n              <td className=\"meta-info block-content\" key={run}>\n                <Link to={ModelRegistryRoutes.getModelVersionPageRoute(modelName, modelVersion)}>{modelVersion}</Link>\n              </td>\n            );\n          })}\n        </tr>\n        <tr className=\"table-row\">\n          <th scope=\"row\" className=\"data-value block-content\">\n            <FormattedMessage\n              defaultMessage=\"Run Name:\"\n              description=\"Text for run name row header in the main table in the model comparison\n                page\"\n            />\n          </th>\n          {runNames.map((runName, i) => {\n            return (\n              <td className=\"meta-info block-content\" key={runInfos[i].runUuid}>\n                <div className=\"truncate-text single-line cell-content\">{runName}</div>\n              </td>\n            );\n          })}\n        </tr>\n        <tr className=\"table-row\">\n          <th scope=\"row\" className=\"data-value block-content\">\n            <FormattedMessage\n              defaultMessage=\"Start Time:\"\n              description=\"Text for start time row header in the main table in the model comparison\n                page\"\n            />\n          </th>\n          {runInfos.map((run, idx) => {\n            /* Do not attempt to get timestamps for invalid run IDs */\n            const startTime =\n              run.startTime && runInfosValid[idx] ? Utils.formatTimestamp(run.startTime, this.props.intl) : '(unknown)';\n            return (\n              <td className=\"meta-info block-content\" key={run.runUuid}>\n                {startTime}\n              </td>\n            );\n          })}\n        </tr>\n      </tbody>\n    );\n  }\n\n  /* additional Switch and Text are antd Switch component and the text followed by the toggle switch\n  this is currently used in schema section where we have an additional switch toggle for\n  ignore column ordering, same logic can be applied if future section needs additional toggle */\n  renderSectionHeader(\n    activeSection: any,\n    toggleSection: any,\n    sectionName: any,\n    leftToggle = true,\n    additionalSwitch = null,\n    additionalSwitchText = null,\n  ) {\n    const { runInfos } = this.props;\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    const isActive = this.state[activeSection];\n    const { downIcon, rightIcon } = this.icons;\n    return (\n      <tbody>\n        <tr>\n          <th scope=\"rowgroup\" className=\"block-content main-table-header\" colSpan={runInfos.length + 1}>\n            <div className=\"switch-button-container\">\n              <CollapseButton onClick={() => this.onToggleClick(activeSection)}>\n                {isActive ? downIcon : rightIcon}\n                <span className=\"header\">{sectionName}</span>\n              </CollapseButton>\n              {additionalSwitch}\n              {additionalSwitchText}\n              <Switch\n                defaultChecked\n                className=\"toggle-switch\"\n                // @ts-expect-error TS(2322): Type '{ defaultChecked: true; className: string; s... Remove this comment to see the full error message\n                style={leftToggle ? { marginLeft: 'auto' } : {}}\n                onChange={() => this.onToggleClick(toggleSection)}\n              />\n              <div className=\"padding-left-text\">\n                <span>\n                  <FormattedMessage\n                    defaultMessage=\"Show diff only\"\n                    description=\"Toggle text that determines whether to show diff only in the model\n                      comparison page\"\n                  />\n                </span>\n              </div>\n            </div>\n          </th>\n        </tr>\n      </tbody>\n    );\n  }\n\n  renderParams() {\n    return (\n      <tbody className=\"scrollable-table\">\n        {this.renderDataRows(\n          this.props.paramLists,\n          <FormattedMessage\n            defaultMessage=\"Parameters\"\n            description=\"Field name text for parameters table in the model comparison page\"\n          />,\n          this.state.paramsActive,\n          this.state.paramsToggle,\n        )}\n      </tbody>\n    );\n  }\n\n  renderSchemaSectionHeader(activeSection: any, sectionName: any) {\n    const { runInfos } = this.props;\n    const { schemaActive } = this.state;\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    const isActive = this.state[activeSection];\n    const { minusIcon, plusIcon } = this.icons;\n    return (\n      <tbody>\n        <tr className={`${schemaActive ? '' : 'hidden-row'}`}>\n          <th scope=\"rowgroup\" className=\"schema-table-header block-content\" colSpan={runInfos.length + 1}>\n            <button className=\"schema-collapse-button\" onClick={() => this.onToggleClick(activeSection)}>\n              {isActive ? minusIcon : plusIcon}\n              <strong style={{ paddingLeft: 4 }}>{sectionName}</strong>\n            </button>\n          </th>\n        </tr>\n      </tbody>\n    );\n  }\n\n  renderSchema(activeSection: any, sectionName: any, listByIndex: any, listByName: any) {\n    const { schemaActive, compareByColumnNameToggle, schemaToggle } = this.state;\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    const isActive = this.state[activeSection];\n    const showSchemaSection = schemaActive && isActive;\n    const showListByIndex = !compareByColumnNameToggle && !_.isEmpty(listByIndex);\n    const showListByName = compareByColumnNameToggle && !_.isEmpty(listByName);\n    const listByIndexHeaderMap = (key: any, data: any) => (\n      <>\n        {sectionName} [{key}]\n      </>\n    );\n    const listByNameHeaderMap = (key: any, data: any) => key;\n    const schemaFormatter = (value: any) => value;\n    const schemaFieldName = (\n      <FormattedMessage\n        defaultMessage=\"Schema {sectionName}\"\n        description=\"Field name text for schema table in the model comparison page\"\n        values={{ sectionName: sectionName }}\n      />\n    );\n    return (\n      <tbody className=\"scrollable-table schema-scrollable-table\">\n        {this.renderDataRows(\n          listByIndex,\n          schemaFieldName,\n          showSchemaSection && showListByIndex,\n          schemaToggle,\n          listByIndexHeaderMap,\n          schemaFormatter,\n        )}\n        {this.renderDataRows(\n          listByName,\n          schemaFieldName,\n          showSchemaSection && showListByName,\n          schemaToggle,\n          listByNameHeaderMap,\n          schemaFormatter,\n        )}\n      </tbody>\n    );\n  }\n\n  renderMetrics() {\n    const { runInfos, metricLists } = this.props;\n    const { metricActive, metricToggle } = this.state;\n    const { chartIcon } = this.icons;\n    const metricsHeaderMap = (key: any, data: any) => {\n      return (\n        <Link\n          to={Routes.getMetricPageRoute(\n            runInfos.map((info) => info.runUuid).filter((uuid, idx) => data[idx] !== undefined),\n            key,\n            // TODO: Refactor so that the breadcrumb\n            // on the linked page is for model registry\n            [runInfos[0].experimentId],\n          )}\n          target=\"_blank\"\n          title=\"Plot chart\"\n        >\n          {key}\n          {chartIcon}\n        </Link>\n      );\n    };\n    return (\n      <tbody className=\"scrollable-table\">\n        {this.renderDataRows(\n          metricLists,\n          <FormattedMessage\n            defaultMessage=\"Metrics\"\n            description=\"Field name text for metrics table in the model comparison page\"\n          />,\n          metricActive,\n          metricToggle,\n          metricsHeaderMap,\n          Utils.formatMetric,\n        )}\n      </tbody>\n    );\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  renderDataRows(\n    list: any,\n    fieldName: any,\n    show = true,\n    toggle = false,\n    headerMap = (key: any, data: any) => key,\n    formatter = (value: any) => (isNaN(value) ? `\"${value}\"` : value),\n  ) {\n    // @ts-expect-error TS(2554): Expected 2 arguments, but got 1.\n    const keys = CompareRunUtil.getKeys(list);\n    const data = {};\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    keys.forEach((k) => (data[k] = []));\n    list.forEach((records: any, i: any) => {\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      keys.forEach((k) => data[k].push(undefined));\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      records.forEach((r: any) => (data[r.key][i] = r.value));\n    });\n    if (_.isEmpty(keys) || _.isEmpty(list)) {\n      return (\n        <tr className={`table-row ${show ? '' : 'hidden-row'}`}>\n          <th scope=\"row\" className=\"rowHeader block-content\">\n            <CenteredText>\n              <FormattedMessage\n                defaultMessage=\"{fieldName} are empty\"\n                description=\"Default text in data table where items are empty in the model\n                  comparison page\"\n                values={{ fieldName: fieldName }}\n              />\n            </CenteredText>\n          </th>\n        </tr>\n      );\n    }\n    // @ts-expect-error TS(2345): Argument of type 'string' is not assignable to par... Remove this comment to see the full error message\n    const isAllNumeric = _.every(keys, (key) => !isNaN(key));\n    if (isAllNumeric) {\n      keys.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n    } else {\n      keys.sort();\n    }\n    let identical = true;\n    const resultRows = keys.map((k) => {\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      const isDifferent = data[k].length > 1 && _.uniq(data[k]).length > 1;\n      identical = !isDifferent && identical;\n      return (\n        <tr key={k} className={`table-row ${(toggle && !isDifferent) || !show ? 'hidden-row' : ''}`}>\n          <th scope=\"row\" className=\"rowHeader block-content\">\n            {/* @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message */}\n            {headerMap(k, data[k])}\n          </th>\n          {/* @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message */}\n          {data[k].map((value: any, i: any) => (\n            <td\n              className={`data-value block-content ${isDifferent ? 'highlight-data' : ''}`}\n              key={this.props.runInfos[i].runUuid}\n            >\n              <span className=\"truncate-text single-line cell-content\">\n                {value === undefined ? '-' : formatter(value)}\n              </span>\n            </td>\n          ))}\n        </tr>\n      );\n    });\n    if (identical && toggle) {\n      return (\n        <tr className={`table-row ${show ? '' : 'hidden-row'}`}>\n          <th scope=\"row\" className=\"rowHeader block-content\">\n            <CenteredText>\n              <FormattedMessage\n                defaultMessage=\"{fieldName} are identical\"\n                // eslint-disable-next-line max-len\n                description=\"Default text in data table where items are identical in the model comparison page\"\n                values={{ fieldName: fieldName }}\n              />\n            </CenteredText>\n          </th>\n        </tr>\n      );\n    }\n    return resultRows;\n  }\n}\n\nconst getModelVersionSchemaColumnsByIndex = (columns: any) => {\n  const columnsByIndex = {};\n  columns.forEach((column: any, index: any) => {\n    const name = column.name ? column.name : '';\n    const type = column.type ? column.type : '';\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    columnsByIndex[index] = {\n      key: index,\n      value: name !== '' && type !== '' ? `${name}: ${type}` : `${name}${type}`,\n    };\n  });\n  return columnsByIndex;\n};\n\nconst getModelVersionSchemaColumnsByName = (columns: any) => {\n  const columnsByName = {};\n  columns.forEach((column: any) => {\n    const name = column.name ? column.name : '-';\n    const type = column.type ? column.type : '-';\n    // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    columnsByName[name] = {\n      key: name,\n      value: type,\n    };\n  });\n  return columnsByName;\n};\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  const runInfos = [];\n  const runInfosValid = [];\n  const metricLists = [];\n  const paramLists = [];\n  const runNames = [];\n  const runDisplayNames = [];\n  const runUuids = [];\n  const { modelName, versionsToRuns } = ownProps;\n  const inputsListByName = [];\n  const inputsListByIndex = [];\n  const outputsListByName = [];\n  const outputsListByIndex = [];\n  for (const modelVersion in versionsToRuns) {\n    if (versionsToRuns && modelVersion in versionsToRuns) {\n      const runUuid = versionsToRuns[modelVersion];\n      const runInfo = getRunInfo(runUuid, state);\n      if (runInfo) {\n        runInfos.push(runInfo);\n        runInfosValid.push(true);\n        metricLists.push(Object.values(getLatestMetrics(runUuid, state)));\n        paramLists.push(Object.values(getParams(runUuid, state)));\n        runNames.push(Utils.getRunName(runInfo));\n        // the following are used to render plots - we only include valid run IDs here\n        runDisplayNames.push(Utils.getRunDisplayName(runInfo, runUuid));\n        runUuids.push(runUuid);\n      } else {\n        if (runUuid) {\n          runInfos.push({ runUuid });\n        } else {\n          runInfos.push({ runUuid: 'None' });\n        }\n        runInfosValid.push(false);\n        metricLists.push([]);\n        paramLists.push([]);\n        runNames.push('Invalid Run');\n      }\n      const schema = getModelVersionSchemas(state, modelName, modelVersion);\n      inputsListByIndex.push(Object.values(getModelVersionSchemaColumnsByIndex((schema as any).inputs)));\n      inputsListByName.push(Object.values(getModelVersionSchemaColumnsByName((schema as any).inputs)));\n      outputsListByIndex.push(Object.values(getModelVersionSchemaColumnsByIndex((schema as any).outputs)));\n      outputsListByName.push(Object.values(getModelVersionSchemaColumnsByName((schema as any).outputs)));\n    }\n  }\n\n  return {\n    runInfos,\n    runInfosValid,\n    metricLists,\n    paramLists,\n    runNames,\n    runDisplayNames,\n    runUuids,\n    modelName,\n    inputsListByName,\n    inputsListByIndex,\n    outputsListByName,\n    outputsListByIndex,\n  };\n};\n\nconst DEFAULT_COLUMN_WIDTH = 200;\n\nconst styles = {\n  wrapper: (numRuns: any) => ({\n    '.mlflow-compare-table': {\n      // 1 extra unit for header column\n      minWidth: (numRuns + 1) * DEFAULT_COLUMN_WIDTH,\n    },\n  }),\n  compareModelVersionsView: {\n    'button:focus': {\n      outline: 'none',\n      boxShadow: 'none',\n    },\n    'td.block-content th.block-content': {\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      tableLayout: 'fixed',\n      boxSizing: 'content-box',\n    },\n    'th.schema-table-header': {\n      height: 28,\n      padding: 0,\n    },\n    'tr.table-row': {\n      display: 'table',\n      width: '100%',\n      tableLayout: 'fixed',\n    },\n    'tr.hidden-row': {\n      display: 'none',\n    },\n    'tbody.scrollable-table': {\n      width: '100%',\n      display: 'block',\n      border: 'none',\n      maxHeight: 400,\n      overflowY: 'auto',\n    },\n    'tbody.schema-scrollable-table': {\n      maxHeight: 200,\n    },\n    '.switch-button-container': {\n      display: 'flex',\n      paddingTop: 16,\n      paddingBottom: 16,\n    },\n    'button.schema-collapse-button': {\n      textAlign: 'left',\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      border: 'none',\n    },\n    '.collapse-button': {\n      textAlign: 'left',\n      display: 'flex',\n      alignItems: 'center',\n      border: 'none',\n      backgroundColor: 'white',\n      paddingLeft: 0,\n    },\n    '.cell-content': {\n      maxWidth: '200px',\n      minWidth: '100px',\n    },\n    '.padding-left-text': {\n      paddingLeft: 8,\n    },\n    '.padding-right-text': {\n      paddingRight: 16,\n    },\n    '.toggle-switch': {\n      marginTop: 2,\n    },\n    '.header': {\n      paddingLeft: 8,\n      fontSize: 16,\n    },\n  },\n};\n\nexport const CompareModelVersionsView = connect(mapStateToProps)(injectIntl(CompareModelVersionsViewImpl));\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport qs from 'qs';\nimport { connect } from 'react-redux';\nimport { getRunApi } from '../../experiment-tracking/actions';\nimport { getUUID } from '../../common/utils/ActionUtils';\nimport { getRegisteredModelApi, getModelVersionApi, getModelVersionArtifactApi, parseMlModelFile } from '../actions';\nimport RequestStateWrapper from '../../common/components/RequestStateWrapper';\nimport { CompareModelVersionsView } from './CompareModelVersionsView';\nimport _ from 'lodash';\nimport { PageContainer } from '../../common/components/PageContainer';\nimport { withRouterNext } from '../../common/utils/withRouterNext';\nimport type { WithRouterNextProps } from '../../common/utils/withRouterNext';\nimport { withErrorBoundary } from '../../common/utils/withErrorBoundary';\nimport ErrorUtils from '../../common/utils/ErrorUtils';\n\ntype CompareModelVersionsPageImplProps = {\n  modelName: string;\n  versionsToRuns: any;\n  getRunApi: (...args: any[]) => any;\n  getRegisteredModelApi: (...args: any[]) => any;\n  getModelVersionApi: (...args: any[]) => any;\n  getModelVersionArtifactApi: (...args: any[]) => any;\n  parseMlModelFile: (...args: any[]) => any;\n};\n\ntype CompareModelVersionsPageImplState = any;\n\n// TODO: Write integration tests for this component\nexport class CompareModelVersionsPageImpl extends Component<\n  CompareModelVersionsPageImplProps,\n  CompareModelVersionsPageImplState\n> {\n  registeredModelRequestId = getUUID();\n  versionRequestId = getUUID();\n  runRequestId = getUUID();\n  getMlModelFileRequestId = getUUID();\n\n  state = {\n    requestIds: [\n      // requests that must be fulfilled before rendering\n      this.registeredModelRequestId,\n      this.runRequestId,\n      this.versionRequestId,\n      this.getMlModelFileRequestId,\n    ],\n    requestIdsWith404ErrorsToIgnore: [this.runRequestId, this.getMlModelFileRequestId],\n  };\n\n  removeRunRequestId() {\n    this.setState((prevState: any) => ({\n      requestIds: _.without(prevState.requestIds, this.runRequestId),\n    }));\n  }\n\n  componentDidMount() {\n    this.props.getRegisteredModelApi(this.props.modelName, this.registeredModelRequestId);\n    for (const modelVersion in this.props.versionsToRuns) {\n      if ({}.hasOwnProperty.call(this.props.versionsToRuns, modelVersion)) {\n        const runID = this.props.versionsToRuns[modelVersion];\n        if (runID) {\n          this.props.getRunApi(runID, this.runRequestId).catch(() => {\n            // Failure of this call should not block the page. Here we remove\n            // `runRequestId` from `requestIds` to unblock RequestStateWrapper\n            // from rendering its content\n            this.removeRunRequestId();\n          });\n        } else {\n          this.removeRunRequestId();\n        }\n        const { modelName } = this.props;\n        this.props.getModelVersionApi(modelName, modelVersion, this.versionRequestId);\n        this.props\n          .getModelVersionArtifactApi(modelName, modelVersion)\n          .then((content: any) =>\n            this.props.parseMlModelFile(modelName, modelVersion, content.value, this.getMlModelFileRequestId),\n          )\n          .catch(() => {\n            // Failure of this call chain should not block the page. Here we remove\n            // `getMlModelFileRequestId` from `requestIds` to unblock RequestStateWrapper\n            // from rendering its content\n            this.setState((prevState: any) => ({\n              requestIds: _.without(prevState.requestIds, this.getMlModelFileRequestId),\n            }));\n          });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <PageContainer>\n        <RequestStateWrapper\n          requestIds={this.state.requestIds}\n          requestIdsWith404sToIgnore={this.state.requestIdsWith404ErrorsToIgnore}\n        >\n          <CompareModelVersionsView modelName={this.props.modelName} versionsToRuns={this.props.versionsToRuns} />\n        </RequestStateWrapper>\n      </PageContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: WithRouterNextProps) => {\n  const { location } = ownProps;\n  const searchValues = qs.parse(location.search);\n  // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n  const modelName = decodeURIComponent(JSON.parse(searchValues['?name']));\n  // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n  const versionsToRuns = JSON.parse(searchValues['runs']);\n  return { modelName, versionsToRuns };\n};\n\nconst mapDispatchToProps = {\n  getRunApi,\n  getRegisteredModelApi,\n  getModelVersionApi,\n  getModelVersionArtifactApi,\n  parseMlModelFile,\n};\n\nconst CompareModelVersionsPageWithRouter = withRouterNext(\n  connect(mapStateToProps, mapDispatchToProps)(CompareModelVersionsPageImpl),\n);\n\nexport const CompareModelVersionsPage = withErrorBoundary(\n  ErrorUtils.mlflowServices.MODEL_REGISTRY,\n  CompareModelVersionsPageWithRouter,\n);\n\nexport default CompareModelVersionsPage;\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport {\n  Breadcrumb,\n  Button,\n  Spacer,\n  Dropdown,\n  Menu,\n  Header,\n  OverflowIcon,\n  useDesignSystemTheme,\n  type HeaderProps,\n} from '@databricks/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { PreviewBadge } from './PreviewBadge';\n\ntype OverflowMenuProps = {\n  menu?: {\n    id: string;\n    itemName: React.ReactNode;\n    onClick?: (...args: any[]) => any;\n    href?: string;\n  }[];\n};\n\nexport function OverflowMenu({ menu }: OverflowMenuProps) {\n  const overflowMenu = (\n    <Menu>\n      {/* @ts-expect-error TS(2532): Object is possibly 'undefined'. */}\n      {menu.map(({ id, itemName, onClick, href, ...otherProps }) => (\n        // @ts-expect-error TS(2769): No overload matches this call.\n        <Menu.Item key={id} onClick={onClick} href={href} data-test-id={id} {...otherProps}>\n          {itemName}\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n  return menu.length > 0 ? (\n    <Dropdown overlay={overflowMenu} trigger={['click']} placement=\"bottomLeft\" arrow>\n      <Button\n        componentId=\"codegen_mlflow_app_src_shared_building_blocks_pageheader.tsx_54\"\n        icon={<OverflowIcon />}\n        data-test-id=\"overflow-menu-trigger\"\n        aria-label=\"Open header dropdown menu\"\n      />\n    </Dropdown>\n  ) : null;\n}\n\ntype PageHeaderProps = Pick<HeaderProps, 'dangerouslyAppendEmotionCSS'> & {\n  title: React.ReactNode;\n  breadcrumbs?: React.ReactNode[];\n  preview?: boolean;\n  feedbackOrigin?: string;\n  infoPopover?: React.ReactNode;\n  children?: React.ReactNode;\n  spacerSize?: 'xs' | 'sm' | 'md' | 'lg';\n  hideSpacer?: boolean;\n  titleAddOns?: React.ReactNode | React.ReactNode[];\n};\n\n/**\n * A page header that includes:\n *   - title,\n *   - optional breadcrumb content,\n *   - optional preview mark,\n *   - optional feedback origin: shows the \"Send feedback\" button when not empty, and\n *   - optional info popover, safe to have link inside.\n */\nexport function PageHeader(props: PageHeaderProps) {\n  const {\n    title, // required\n    breadcrumbs = [],\n    titleAddOns = [],\n    preview,\n    children,\n    spacerSize,\n    hideSpacer = false,\n    dangerouslyAppendEmotionCSS,\n  } = props;\n  const { theme } = useDesignSystemTheme();\n  const intl = useIntl();\n\n  return (\n    <>\n      <Header\n        breadcrumbs={\n          breadcrumbs.length > 0 && (\n            <Breadcrumb includeTrailingCaret>\n              {breadcrumbs.map((b, i) => (\n                <Breadcrumb.Item key={i}>{b}</Breadcrumb.Item>\n              ))}\n            </Breadcrumb>\n          )\n        }\n        buttons={children}\n        title={title}\n        // prettier-ignore\n        titleAddOns={\n          <>\n            {preview && <PreviewBadge css={{ marginLeft: 0 }} />}\n            {titleAddOns}\n          </>\n        }\n        dangerouslyAppendEmotionCSS={dangerouslyAppendEmotionCSS}\n      />\n      <Spacer\n        // @ts-expect-error TS(2322): Type '{ css: { flexShrink: number; }; }' is not as... Remove this comment to see the full error message\n        css={{\n          // Ensure spacer's fixed height\n          flexShrink: 0,\n          ...(hideSpacer ? { display: 'none' } : {}),\n        }}\n        size={spacerSize}\n      />\n    </>\n  );\n}\n","import spinner from '../static/mlflow-spinner.png';\nimport { Interpolation, keyframes, Theme } from '@emotion/react';\n\ntype Props = {\n  showImmediately?: boolean;\n};\n\nexport function Spinner({ showImmediately }: Props) {\n  return (\n    <div css={(theme) => styles.spinner(theme, showImmediately)}>\n      <img alt=\"Page loading...\" src={spinner} />\n    </div>\n  );\n}\n\nconst styles = {\n  spinner: (theme: Theme, immediate?: boolean): Interpolation<Theme> => ({\n    width: 100,\n    marginTop: 100,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n\n    img: {\n      position: 'absolute',\n      opacity: 0,\n      top: '50%',\n      left: '50%',\n      width: theme.general.heightBase * 2,\n      height: theme.general.heightBase * 2,\n      marginTop: -theme.general.heightBase,\n      marginLeft: -theme.general.heightBase,\n      animation: `${keyframes`\n          0% {\n            opacity: 1;\n          }\n          100% {\n            opacity: 1;\n            -webkit-transform: rotate(360deg);\n                transform: rotate(360deg);\n            }\n          `} 3s linear infinite`,\n      animationDelay: immediate ? '0s' : '0.5s',\n    },\n  }),\n};\n"],"names":["SectionErrorBoundary","React","constructor","args","state","error","componentDidCatch","errorInfo","this","setState","console","renderErrorMessage","props","showServerError","_jsxs","children","message","render","_jsx","className","css","classNames","wrapper","href","Utils","getSupportPageUrl","target","marginLeft","RequestStateWrapper","Component","shouldRender","shouldRenderError","getErrorRequests","requests","requestIdsWith404sToIgnore","filter","r","undefined","includes","id","getErrorCode","ErrorCodes","RESOURCE_DOES_NOT_EXIST","getDerivedStateFromProps","nextProps","length","every","active","requestErrors","getRenderedContent","customSpinner","permissionDeniedView","suppressErrorThrow","customRequestErrorHandlerFn","permissionDeniedErrors","failedRequest","PERMISSION_DENIED","shouldOptimisticallyRender","triggerError","Spinner","defaultProps","Error","connect","mapStateToProps","ownProps","getApis","requestIds","TabPane","LegacyTabs","CenteredText","theme","useDesignSystemTheme","_css","textAlign","color","colors","textSecondary","CompareTable","backgroundColor","white","padding","backgroundValidationWarning","CollapseButton","display","alignItems","border","paddingLeft","cursor","CompareModelVersionsViewImpl","inputActive","outputActive","paramsToggle","paramsActive","schemaToggle","compareByColumnNameToggle","schemaActive","metricToggle","metricActive","icons","plusIcon","minusIcon","downIcon","rightIcon","chartIcon","onToggleClick","inputsListByIndex","inputsListByName","modelName","outputsListByIndex","outputsListByName","runInfos","runUuids","runDisplayNames","paramLists","metricLists","title","FormattedMessage","defaultMessage","values","numVersions","breadcrumbs","Link","to","ModelRegistryRoutes","modelListPageRoute","getModelPageRoute","styles","compareModelVersionsView","PageHeader","renderTableHeader","renderModelVersionInfo","renderSectionHeader","renderParams","Switch","style","onChange","renderSchemaSectionHeader","renderSchema","renderMetrics","tab","ParallelCoordinatesPlotPanel","CompareRunScatter","CompareRunBox","CompareRunContour","runInfosValid","scope","map","idx","_r$experimentId","_r$runUuid","Routes","getRunPageRoute","experimentId","runUuid","versionsToRuns","runNames","Object","keys","modelVersion","run","getModelVersionPageRoute","runName","i","startTime","formatTimestamp","intl","activeSection","toggleSection","sectionName","leftToggle","additionalSwitch","additionalSwitchText","isActive","colSpan","onClick","defaultChecked","renderDataRows","listByIndex","listByName","showSchemaSection","showListByIndex","_","showListByName","schemaFormatter","value","schemaFieldName","listByIndexHeaderMap","key","data","_Fragment","listByNameHeaderMap","metricsHeaderMap","getMetricPageRoute","info","uuid","formatMetric","list","fieldName","show","toggle","headerMap","formatter","isNaN","CompareRunUtil","getKeys","forEach","k","records","push","sort","a","b","parseInt","identical","resultRows","isDifferent","getModelVersionSchemaColumnsByIndex","columns","columnsByIndex","column","index","name","type","getModelVersionSchemaColumnsByName","columnsByName","numRuns","minWidth","outline","boxShadow","whiteSpace","textOverflow","tableLayout","boxSizing","height","width","maxHeight","overflowY","paddingTop","paddingBottom","maxWidth","paddingRight","marginTop","fontSize","CompareModelVersionsView","runInfo","getRunInfo","getLatestMetrics","getParams","getRunName","getRunDisplayName","schema","getModelVersionSchemas","inputs","outputs","injectIntl","CompareModelVersionsPageImpl","registeredModelRequestId","getUUID","versionRequestId","runRequestId","getMlModelFileRequestId","requestIdsWith404ErrorsToIgnore","removeRunRequestId","prevState","componentDidMount","getRegisteredModelApi","hasOwnProperty","call","runID","getRunApi","catch","getModelVersionApi","getModelVersionArtifactApi","then","content","parseMlModelFile","PageContainer","mapDispatchToProps","CompareModelVersionsPageWithRouter","withRouterNext","location","searchValues","qs","search","decodeURIComponent","JSON","parse","CompareModelVersionsPage","withErrorBoundary","ErrorUtils","mlflowServices","MODEL_REGISTRY","OverflowMenu","menu","overflowMenu","Menu","itemName","otherProps","Item","Dropdown","overlay","trigger","placement","arrow","Button","componentId","icon","OverflowIcon","_ref","titleAddOns","preview","spacerSize","hideSpacer","dangerouslyAppendEmotionCSS","useIntl","Header","Breadcrumb","includeTrailingCaret","buttons","PreviewBadge","Spacer","flexShrink","size","showImmediately","spinner","alt","src","immediate","marginRight","img","position","opacity","top","left","general","heightBase","animation","keyframes","animationDelay"],"sourceRoot":""}